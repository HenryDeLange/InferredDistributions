package mywild.launcher;

import java.awt.EventQueue;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import mywild.inferreddistributions.DataGeneratorAppForINat;
import mywild.inferreddistributions.DataGeneratorAppForRaster;
import mywild.inferreddistributions.DataViewerApp;
import mywild.inferreddistributions.NeuralNetworkProcessorApp;

public class DataGeneratorAppLauncher extends JFrame {

    public DataGeneratorAppLauncher() {
        initComponents();
    }
    
    public static void main(String args[]) {
        // Set native Look and Feel
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(DataGeneratorAppLauncher.class.getName()).log(Level.SEVERE, null, ex);
        }
        // Launch the application
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                DataGeneratorAppLauncher app = new DataGeneratorAppLauncher();
                app.setLocationRelativeTo(null);
                app.setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnViewer = new javax.swing.JButton();
        btnGenerateRaster = new javax.swing.JButton();
        btnGenerateINat = new javax.swing.JButton();
        btnNeuralNetwork = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inferred Distributions Launcher");

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD, jLabel1.getFont().getSize()+20));
        jLabel1.setText("Inferred Distributions Launcher");

        btnViewer.setFont(btnViewer.getFont().deriveFont(btnViewer.getFont().getStyle() | java.awt.Font.BOLD, btnViewer.getFont().getSize()+13));
        btnViewer.setText("Data Viewer");
        btnViewer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewer.setFocusPainted(false);
        btnViewer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewerActionPerformed(evt);
            }
        });

        btnGenerateRaster.setFont(btnGenerateRaster.getFont().deriveFont(btnGenerateRaster.getFont().getStyle() | java.awt.Font.BOLD, btnGenerateRaster.getFont().getSize()+13));
        btnGenerateRaster.setText("Generate Raster Datasets");
        btnGenerateRaster.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerateRaster.setFocusPainted(false);
        btnGenerateRaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateRasterActionPerformed(evt);
            }
        });

        btnGenerateINat.setFont(btnGenerateINat.getFont().deriveFont(btnGenerateINat.getFont().getStyle() | java.awt.Font.BOLD, btnGenerateINat.getFont().getSize()+13));
        btnGenerateINat.setText("Generate iNaturalist Datasets");
        btnGenerateINat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerateINat.setFocusPainted(false);
        btnGenerateINat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateINatActionPerformed(evt);
            }
        });

        btnNeuralNetwork.setFont(btnNeuralNetwork.getFont().deriveFont(btnNeuralNetwork.getFont().getStyle() | java.awt.Font.BOLD, btnNeuralNetwork.getFont().getSize()+13));
        btnNeuralNetwork.setText("Neural Network Processor");
        btnNeuralNetwork.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNeuralNetwork.setFocusPainted(false);
        btnNeuralNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNeuralNetworkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnGenerateRaster, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
                    .addComponent(btnNeuralNetwork, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
                    .addComponent(btnGenerateINat, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
                    .addComponent(btnViewer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(btnViewer, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnGenerateRaster, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnGenerateINat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnNeuralNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateINatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateINatActionPerformed
        DataGeneratorAppForINat frame = new DataGeneratorAppForINat();
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_btnGenerateINatActionPerformed

    private void btnGenerateRasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateRasterActionPerformed
        DataGeneratorAppForRaster frame = new DataGeneratorAppForRaster();
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_btnGenerateRasterActionPerformed

    private void btnViewerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewerActionPerformed
        DataViewerApp frame = new DataViewerApp();
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_btnViewerActionPerformed

    private void btnNeuralNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNeuralNetworkActionPerformed
        NeuralNetworkProcessorApp frame = new NeuralNetworkProcessorApp();
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_btnNeuralNetworkActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerateINat;
    private javax.swing.JButton btnGenerateRaster;
    private javax.swing.JButton btnNeuralNetwork;
    private javax.swing.JButton btnViewer;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
